{"version":3,"sources":["../src/utils.js"],"names":["checkTableIsExist","editor","table","cells","Array","from","Editor","nodes","at","match","n","type","length","isTableElement","isInSameTable","selection","edges","start","end","startTable","endTable","startPath","endPath","Path","equals"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;AAEO,SAASA,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AAC/C,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAN,CACZC,cAAOC,KAAP,CAAaN,MAAb,EAAqB;AACnBO,IAAAA,EAAE,EAAEN,KAAK,CAAC,CAAD,CADU;AAEnBO,IAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,KAAW,YAAf;AAAA;AAFW,GAArB,CADY,CAAd;AAOA,SAAO,CAAC,CAACR,KAAK,CAACS,MAAf;AACD;;AAEM,SAASC,cAAT,CAAwBF,IAAxB,EAA8B;AACnC,SACEA,IAAI,KAAK,OAAT,IACAA,IAAI,KAAK,WADT,IAEAA,IAAI,KAAK,YAFT,IAGAA,IAAI,KAAK,eAJX;AAMD;;AAEM,SAASG,aAAT,CAAuBb,MAAvB,EAA+B;AACpC,MAAI,CAACA,MAAM,CAACc,SAAZ,EAAuB,OAAO,KAAP;;AADa,sBAGfT,cAAOU,KAAP,CAAaf,MAAb,EAAqBA,MAAM,CAACc,SAA5B,CAHe;AAAA;AAAA,MAG7BE,KAH6B;AAAA,MAGtBC,GAHsB;;AAAA,sBAIfZ,cAAOC,KAAP,CAAaN,MAAb,EAAqB;AACxCO,IAAAA,EAAE,EAAES,KADoC;AAExCR,IAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,KAAW,OAAf;AAAA;AAFgC,GAArB,CAJe;AAAA;AAAA,MAI7BQ,UAJ6B;;AAAA,uBASjBb,cAAOC,KAAP,CAAaN,MAAb,EAAqB;AACtCO,IAAAA,EAAE,EAAEU,GADkC;AAEtCT,IAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,KAAW,OAAf;AAAA;AAF8B,GAArB,CATiB;AAAA;AAAA,MAS7BS,QAT6B;;AAcpC,MAAID,UAAU,IAAIC,QAAlB,EAA4B;AAAA,qCACJD,UADI;AAAA,QACjBE,SADiB;;AAAA,mCAEND,QAFM;AAAA,QAEjBE,OAFiB;;AAI1B,QAAIC,YAAKC,MAAL,CAAYH,SAAZ,EAAuBC,OAAvB,CAAJ,EAAqC;AACnC,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["import { Editor, Path } from 'slate';\n\nexport function checkTableIsExist(editor, table) {\n  const cells = Array.from(\n    Editor.nodes(editor, {\n      at: table[1],\n      match: n => n.type === 'table-cell',\n    }),\n  );\n\n  return !!cells.length;\n}\n\nexport function isTableElement(type) {\n  return (\n    type === 'table' ||\n    type === 'table-row' ||\n    type === 'table-cell' ||\n    type === 'table-content'\n  );\n}\n\nexport function isInSameTable(editor) {\n  if (!editor.selection) return false;\n\n  const [start, end] = Editor.edges(editor, editor.selection);\n  const [startTable] = Editor.nodes(editor, {\n    at: start,\n    match: n => n.type === 'table',\n  });\n\n  const [endTable] = Editor.nodes(editor, {\n    at: end,\n    match: n => n.type === 'table',\n  });\n\n  if (startTable && endTable) {\n    const [, startPath] = startTable;\n    const [, endPath] = endTable;\n\n    if (Path.equals(startPath, endPath)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"],"file":"utils.js"}