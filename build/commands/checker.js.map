{"version":3,"sources":["../../src/commands/checker.js"],"names":["checker","table","editor","direction","selection","Editor","edges","start","nodes","match","n","type","at","startNode","key","gridTable","selectedTable","hasMergedCells","colspan","rowspan","length"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAgBC,SAAhB,EAA8B;AAC1C,MAAI,CAACF,KAAD,IAAU,CAACC,MAAM,CAACE,SAAtB,EAAiC;;AADS,sBAE1BC,cAAOC,KAAP,CAAaJ,MAAb,EAAqBA,MAAM,CAACE,SAA5B,CAF0B;AAAA;AAAA,MAEnCG,KAFmC;;AAAA,sBAGtBF,cAAOG,KAAP,CAAaN,MAAb,EAAqB;AACvCO,IAAAA,KAAK,EAAE,eAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,KAAW,YAAf;AAAA,KAD+B;AAEvCC,IAAAA,EAAE,EAAEL;AAFmC,GAArB,CAHsB;AAAA;AAAA,MAGnCM,SAHmC;;AAAA,MAOlCC,GAPkC,GAO1BD,SAAS,CAAC,CAAD,CAPiB,CAOlCC,GAPkC;;AAAA,sBAQpB,6BAAaZ,MAAb,EAAqBD,KAArB,EAA4Ba,GAA5B,CARoB;AAAA,MAQlCC,SARkC,iBAQlCA,SARkC;;AAS1C,MAAMC,aAAa,GAAG,gCAAWD,SAAX,EAAsBF,SAAtB,EAAiCV,SAAjC,CAAtB;AACA,MAAMc,cAAc,GAAGJ,SAAS,CAAC,CAAD,CAAT,CAAaK,OAAb,GAAuB,CAAvB,IAA4BL,SAAS,CAAC,CAAD,CAAT,CAAaM,OAAb,GAAuB,CAA1E;AACA,MAAIF,cAAc,IAAId,SAAtB,EAAiC,OAAO,KAAP;;AACjC,MAAI,CAACA,SAAD,IAAcc,cAAlB,EAAkC;AAC9B,WAAO,IAAP;AACH;;AACD,MAAId,SAAS,KAAK,OAAd,IAAyBa,aAAa,CAACI,MAAd,KAAyB,CAAlD,IAAuDJ,aAAa,CAAC,CAAD,CAAb,CAAiBI,MAA5E,EAAoF;AAChF,WAAO,IAAP;AACH;;AACD,MAAIjB,SAAS,KAAK,MAAd,IAAwBa,aAAa,CAACI,MAAd,GAAuB,CAAnD,EAAsD;AAClD,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CAtBD;;eAwBepB,O","sourcesContent":["/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable consistent-return */\r\nimport { Editor } from 'slate';\r\nimport { checkMerge } from './mergeSelection';\r\nimport { splitedTable } from '../selection';\r\n\r\nconst checker = (table, editor, direction) => {\r\n    if (!table || !editor.selection) return;\r\n    const [start] = Editor.edges(editor, editor.selection);\r\n    const [startNode] = Editor.nodes(editor, {\r\n      match: n => n.type === 'table_cell',\r\n      at: start,\r\n    });\r\n    const { key } = startNode[0];\r\n    const { gridTable } = splitedTable(editor, table, key);\r\n    const selectedTable = checkMerge(gridTable, startNode, direction);\r\n    const hasMergedCells = startNode[0].colspan > 1 || startNode[0].rowspan > 1;\r\n    if (hasMergedCells && direction) return false;\r\n    if (!direction && hasMergedCells) {\r\n        return true;\r\n    }\r\n    if (direction === 'right' && selectedTable.length === 1 && selectedTable[0].length) {\r\n        return true;\r\n    }\r\n    if (direction === 'down' && selectedTable.length > 1) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default checker;"],"file":"checker.js"}