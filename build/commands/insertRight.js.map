{"version":3,"sources":["../../src/commands/insertRight.js"],"names":["insertRight","table","editor","selection","xIndex","length","gridTable","getCol","Editor","nodes","match","n","type","startCell","c","cell","key","isReal","insertPositionCol","x","path","colspan","insertCols","Map","checkInsertable","forEach","row","col","originCol","set","newCell","rowspan","originPath","Transforms","insertNodes","at","Path","next"],"mappings":"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","sourcesContent":["import { Editor, Transforms, Path } from 'slate';\nimport { splitedTable } from '../selection';\nimport { createCell } from '../creator';\n\nconst insertRight = (table, editor) => {\n  const { selection } = editor;\n  if (!selection || !table) return;\n\n  const xIndex = table[1].length + 1;\n\n  const { gridTable, getCol } = splitedTable(editor, table);\n\n  const [startCell] = Editor.nodes(editor, {\n    match: n => n.type === 'table_cell',\n  });\n\n  const [insertPositionCol] = getCol(c => c.cell.key === startCell[0].key && c.isReal);\n\n  const x = insertPositionCol.path[xIndex] + (insertPositionCol.cell.colspan || 1) - 1;\n\n  const insertCols = new Map();\n  let checkInsertable = true;\n\n  gridTable.forEach(row => {\n    const col = row[x];\n\n    const [originCol] = getCol(n => n.cell.key === col.cell.key && n.isReal);\n\n    const { cell, path } = originCol;\n\n    if (!row[x + 1] || (col.isReal && (!col.cell.colspan || col.cell.colspan === 1))) {\n      insertCols.set(cell.key, originCol);\n    } else if (path[xIndex] + (cell.colspan || 1) - 1 === x) {\n      insertCols.set(cell.key, originCol);\n    } else {\n      checkInsertable = false;\n    }\n  });\n\n  if (!checkInsertable) {\n    return;\n  }\n\n  insertCols.forEach(col => {\n    const newCell = createCell({\n      rowspan: col.cell.rowspan || 1,\n    });\n\n    if (col.originPath && col.originPath.length) {\n      Transforms.insertNodes(editor, newCell, {\n        at: Path.next(col.originPath),\n      });\n    }\n  });\n};\n\nexport default insertRight;\n"],"file":"insertRight.js"}