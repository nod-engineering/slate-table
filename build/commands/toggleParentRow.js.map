{"version":3,"sources":["../../src/commands/toggleParentRow.js"],"names":["toggleParentRow","table","editor","selected","type","selection","nodes","Editor","at","match","n","isParent","node","rows","path","length","children","cell","Transforms","setNodes","subParent","parent"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAAuC;AAAA,MAApCC,KAAoC,QAApCA,KAAoC;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAAA,MACrDC,SADqD,GACvCH,MADuC,CACrDG,SADqD;AAE7D,MAAI,CAACJ,KAAD,IAAU,CAACI,SAAf,EAA0B;;AAC1B,MAAMC,KAAK,GAAGC,cAAOD,KAAP,CAAaJ,MAAb,EAAqB;AACjCM,IAAAA,EAAE,EAAEP,KAAK,CAAC,CAAD,CADwB;AAEjCQ,IAAAA,KAAK,EAAE,eAACC,CAAD;AAAA,aAAOA,CAAC,CAACN,IAAF,KAAW,WAAlB;AAAA;AAF0B,GAArB,CAAd;;AAIA,MAAMO,QAAQ,GAAGP,IAAI,KAAK,QAA1B;;AAP6D,6CAQ1CE,KAR0C;AAAA;;AAAA;AAQ7D,wDAA0B;AAAA,UAAfM,IAAe;;AAAA,iCACHA,IADG;AAAA,UACjBC,IADiB;AAAA,UACXC,IADW;;AAExB,UAAI,CAAC,gBAAID,IAAJ,EAAU,UAAV,EAAsB,EAAtB,EAA0BE,MAA/B,EAAuC;;AAFf,kDAGLF,IAAI,CAACG,QAHA;AAAA;;AAAA;AAGxB,+DAAkC;AAAA,cAAvBC,IAAuB;;AAChC,cAAI,gBAAIA,IAAJ,EAAU,cAAV,CAAJ,EAA+B;AAC7B,gBAAIN,QAAJ,EAAc;AACZ,kBAAI,CAACR,QAAL,EAAe;AACbe,kCAAWC,QAAX,CAAoBjB,MAApB,EAA4B;AAAEkB,kBAAAA,SAAS,EAAEjB;AAAb,iBAA5B,EAAqD;AAAEK,kBAAAA,EAAE,EAAEM;AAAN,iBAArD;AACD;;AACDI,gCAAWC,QAAX,CAAoBjB,MAApB,EAA4B;AAAEmB,gBAAAA,MAAM,EAAElB;AAAV,eAA5B,EAAkD;AAAEK,gBAAAA,EAAE,EAAEM;AAAN,eAAlD;AACD,aALD,MAKO;AACLI,gCAAWC,QAAX,CAAoBjB,MAApB,EAA4B;AAAEkB,gBAAAA,SAAS,EAAEjB;AAAb,eAA5B,EAAqD;AAAEK,gBAAAA,EAAE,EAAEM;AAAN,eAArD;AACD;AACF;AACF;AAduB;AAAA;AAAA;AAAA;AAAA;AAezB;AAvB4D;AAAA;AAAA;AAAA;AAAA;AAwB9D,CAxBD;;eA0Bed,e","sourcesContent":["import { Transforms, Editor } from \"slate\";\nimport { get } from \"../utils\";\n\nconst toggleParentRow = ({ table, editor, selected, type }) => {\n  const { selection } = editor;\n  if (!table || !selection) return;\n  const nodes = Editor.nodes(editor, {\n    at: table[1],\n    match: (n) => n.type === \"table_row\",\n  });\n  const isParent = type === \"parent\";\n  for (const node of nodes) {\n    const [rows, path] = node;\n    if (!get(rows, \"children\", []).length) return;\n    for (const cell of rows.children) {\n      if (get(cell, \"selectedCell\")) {\n        if (isParent) {\n          if (!selected) {\n            Transforms.setNodes(editor, { subParent: selected }, { at: path });\n          }\n          Transforms.setNodes(editor, { parent: selected }, { at: path });\n        } else {\n          Transforms.setNodes(editor, { subParent: selected }, { at: path });\n        }\n      }\n    }\n  }\n};\n\nexport default toggleParentRow;\n"],"file":"toggleParentRow.js"}