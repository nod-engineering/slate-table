{"version":3,"sources":["../src/withTable.js"],"names":["PreserveSpaceAfter","Set","PreserveSpaceBefore","insertParagraph","editor","at","text","Transforms","insertNodes","type","children","maybePreserveSpace","entry","node","path","preserved","has","next","Editor","Path","length","prev","previous","tablePlugin","deleteBackward","deleteFragment","removeNodes","match","n","selection","Range","isCollapsed","isInTable","above","start","isStart","currCell","string","withTable","normalizeNode"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable no-param-reassign */\r\nimport { Editor, Transforms, Path, Range } from 'slate';\r\nimport { createContent } from './creator';\r\nimport { isInSameTable } from './utils';\r\n\r\nconst PreserveSpaceAfter = new Set(['table']);\r\nconst PreserveSpaceBefore = new Set(['table']);\r\n\r\nconst insertParagraph = (\r\n  editor,\r\n  at,\r\n  text = '',\r\n) => {\r\n  Transforms.insertNodes(\r\n    editor,\r\n    {\r\n      type: 'paragraph',\r\n      children: [{ text }],\r\n    },\r\n    {\r\n      at,\r\n    },\r\n  );\r\n};\r\n\r\nconst maybePreserveSpace = (\r\n  editor,\r\n  entry,\r\n) => {\r\n  const [node, path] = entry;\r\n  const { type } = node;\r\n  let preserved = false;\r\n\r\n  if (PreserveSpaceAfter.has(type)) {\r\n    const next = Editor.next(editor, { at: path });\r\n    if (!next || PreserveSpaceBefore.has(next[0].type)) {\r\n      insertParagraph(editor, Path.next(path));\r\n      preserved = true;\r\n    }\r\n  }\r\n\r\n  if (PreserveSpaceBefore.has(type)) {\r\n    if (path[path.length - 1] === 0) {\r\n      insertParagraph(editor, path);\r\n      preserved = true;\r\n    } else {\r\n      const prev = Editor.previous(editor, { at: path });\r\n      if (!prev || PreserveSpaceAfter.has(prev[0].type)) {\r\n        insertParagraph(editor, path);\r\n        preserved = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return preserved;\r\n};\r\n\r\nconst tablePlugin = (editor) => {\r\n  const { deleteBackward, deleteFragment } = editor;\r\n\r\n  editor.deleteFragment = (...args) => {\r\n    Transforms.removeNodes(editor, {\r\n      match: n => n.type === 'table',\r\n    });\r\n\r\n    deleteFragment(...args);\r\n  };\r\n\r\n  editor.deleteBackward = (...args) => {\r\n    const { selection } = editor;\r\n\r\n    if (selection && Range.isCollapsed(selection)) {\r\n      const isInTable = Editor.above(editor, {\r\n        match: n => n.type === 'table',\r\n      });\r\n\r\n      if (isInTable) {\r\n        const start = Editor.start(editor, selection);\r\n        const isStart = Editor.isStart(editor, start, selection);\r\n\r\n        const currCell = Editor.above(editor, {\r\n          match: n => n.type === 'table_cell',\r\n        });\r\n\r\n        if (isStart && currCell && !Editor.string(editor, currCell[1])) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    deleteBackward(...args);\r\n  };\r\n\r\n  return editor;\r\n};\r\n\r\n\r\nconst withTable = (editor) => {\r\n  const { normalizeNode } = editor;\r\n\r\n  editor.normalizeNode = entry => {\r\n    if (maybePreserveSpace(editor, entry)) return;\r\n\r\n    normalizeNode(entry);\r\n  };\r\n\r\n  return tablePlugin(editor);\r\n};\r\n\r\nexport default withTable;\r\n"],"file":"withTable.js"}