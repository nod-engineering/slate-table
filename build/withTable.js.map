{"version":3,"sources":["../src/withTable.js"],"names":["PreserveSpaceAfter","Set","PreserveSpaceBefore","insertParagraph","editor","at","text","Transforms","insertNodes","type","children","withText","entry","node","path","result","undefined","parent","Node","wrapNodes","tablePlugin","deleteBackward","deleteFragment","deleteForward","matchCells","selection","Editor","nodes","match","n","content","length","removeNodes","Path","next","Range","isCollapsed","isInTable","above","start","isStart","currCell","string","preventDeleteCell","operation","pointCallback","nextPoint","unit","cell","cellPath","Point","equals","anchor","nextCell","before","end","after","withTable","normalizeNode","key"],"mappings":"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","sourcesContent":["import { createContent } from './creator';\r\nimport { isInSameTable } from './utils';\r\nimport { Editor, Transforms, Path, Range, Point, Node } from 'slate';\r\n\r\nconst PreserveSpaceAfter = new Set(['table']);\r\nconst PreserveSpaceBefore = new Set(['table']);\r\n\r\nconst insertParagraph = (editor, at, text = '') => {\r\n  Transforms.insertNodes(\r\n    editor,\r\n    {\r\n      type: 'paragraph',\r\n      children: [{ text }],\r\n    },\r\n    {\r\n      at,\r\n    },\r\n  );\r\n};\r\n\r\nconst withText = (editor, entry) => {\r\n  const [node, path] = entry;\r\n  const { text } = node;\r\n  let result = false;\r\n  if (text !== undefined) {\r\n    const parent = Node.parent(editor, path);\r\n    if (parent && parent.type === 'table_cell') {\r\n      Transforms.wrapNodes(editor, { type: 'paragraph' }, { at: path });\r\n      result = true;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst tablePlugin = editor => {\r\n  const { deleteBackward, deleteFragment, deleteForward } = editor;\r\n  const matchCells = node => node.type === 'table_cell';\r\n\r\n  editor.deleteFragment = (...args) => {\r\n    if (editor.selection && isInSameTable(editor)) {\r\n      const [content] = Editor.nodes(editor, {\r\n        match: n => n.type === 'paragraph',\r\n      });\r\n\r\n      Transforms.insertNodes(editor, createContent(), { at: content[1] });\r\n\r\n      if (content[1] && content[1].length) {\r\n        Transforms.removeNodes(editor, { at: Path.next(content[1]) });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    Transforms.removeNodes(editor, {\r\n      match: n => n.type === 'table',\r\n    });\r\n\r\n    deleteFragment(...args);\r\n  };\r\n  editor.deleteBackward = (...args) => {\r\n    const selection = editor && editor.selection;\r\n    if (selection) return;\r\n\r\n    if (selection && Range.isCollapsed(selection)) {\r\n      const isInTable = Editor.above(editor, {\r\n        match: n => n.type === 'table',\r\n      });\r\n\r\n      if (isInTable) {\r\n        const start = Editor.start(editor, selection);\r\n        const isStart = Editor.isStart(editor, start, selection);\r\n\r\n        const currCell = Editor.above(editor, {\r\n          match: n => n.type === 'table-cell',\r\n        });\r\n\r\n        if (isStart && currCell && !Editor.string(editor, currCell[1])) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    deleteBackward(...args);\r\n  };\r\n\r\n  const preventDeleteCell = (operation, pointCallback, nextPoint) => unit => {\r\n    const selection = editor && editor.selection;\r\n    if (!selection) return;\r\n\r\n    if (Range.isCollapsed(selection)) {\r\n      const [cell] = Editor.nodes(editor, {\r\n        match: matchCells,\r\n      });\r\n      if (cell) {\r\n        // Prevent deletions within a cell\r\n        const [, cellPath] = cell;\r\n        const start = pointCallback(editor, cellPath);\r\n\r\n        if (selection && Point.equals(selection.anchor, start)) {\r\n          return;\r\n        }\r\n      } else {\r\n        // Prevent deleting cell when selection is before or after a table\r\n        const next = nextPoint(editor, selection, { unit });\r\n        const [nextCell] = Editor.nodes(editor, {\r\n          match: matchCells,\r\n          at: next,\r\n        });\r\n        if (nextCell) return;\r\n      }\r\n    }\r\n\r\n    operation(unit);\r\n  };\r\n\r\n  // prevent deleting cells with deleteBackward\r\n  editor.deleteBackward = preventDeleteCell(deleteBackward, Editor.start, Editor.before);\r\n\r\n  // prevent deleting cells with deleteForward\r\n  editor.deleteForward = preventDeleteCell(deleteForward, Editor.end, Editor.after);\r\n\r\n  return editor;\r\n};\r\n\r\nconst withTable = editor => {\r\n  const { normalizeNode } = editor;\r\n\r\n  editor.normalizeNode = entry => {\r\n    if (withText(editor, entry)) return;\r\n\r\n    const [node, path] = entry;\r\n\r\n    if (node && node.type === 'table' && node.children.length === 1 && !node.children[0].key) {\r\n      Transforms.removeNodes(editor, { at: path });\r\n    }\r\n\r\n    normalizeNode(entry);\r\n  };\r\n\r\n  return tablePlugin(editor);\r\n};\r\n\r\nexport default withTable;\r\n"],"file":"withTable.js"}