{"version":3,"sources":["../src/withTable.js"],"names":["PreserveSpaceAfter","Set","PreserveSpaceBefore","insertParagraph","editor","at","text","Transforms","insertNodes","type","children","maybePreserveSpace","entry","node","path","preserved","has","next","Editor","Path","length","prev","previous","tablePlugin","deleteBackward","deleteFragment","deleteForward","matchCells","selection","nodes","match","n","content","removeNodes","Range","isCollapsed","isInTable","above","start","isStart","currCell","string","preventDeleteCell","operation","pointCallback","nextPoint","unit","cell","cellPath","Point","equals","anchor","nextCell","before","end","after","withTable","normalizeNode"],"mappings":"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","sourcesContent":["import { Editor, Transforms, Path, Range, Point } from 'slate';\r\nimport { createContent } from './creator';\r\nimport { isInSameTable } from './utils';\r\n\r\nconst PreserveSpaceAfter = new Set(['table']);\r\nconst PreserveSpaceBefore = new Set(['table']);\r\n\r\nconst insertParagraph = (\r\n  editor,\r\n  at,\r\n  text = '',\r\n) => {\r\n  Transforms.insertNodes(\r\n    editor,\r\n    {\r\n      type: 'paragraph',\r\n      children: [{ text }],\r\n    },\r\n    {\r\n      at,\r\n    },\r\n  );\r\n};\r\n\r\nconst maybePreserveSpace = (\r\n  editor,\r\n  entry,\r\n) => {\r\n  const [node, path] = entry;\r\n  const { type } = node;\r\n  let preserved = false;\r\n\r\n  if (PreserveSpaceAfter.has(type)) {\r\n    const next = Editor.next(editor, { at: path });\r\n    if (!next || PreserveSpaceBefore.has(next[0].type)) {\r\n      insertParagraph(editor, Path.next(path));\r\n      preserved = true;\r\n    }\r\n  }\r\n\r\n  if (PreserveSpaceBefore.has(type)) {\r\n    if (path[path.length - 1] === 0) {\r\n      insertParagraph(editor, path);\r\n      preserved = true;\r\n    } else {\r\n      const prev = Editor.previous(editor, { at: path });\r\n      if (!prev || PreserveSpaceAfter.has(prev[0].type)) {\r\n        insertParagraph(editor, path);\r\n        preserved = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return preserved;\r\n};\r\n\r\nconst tablePlugin = (editor) => {\r\n  const { deleteBackward, deleteFragment, deleteForward } = editor;\r\n  const matchCells = (node) => node.type === 'table_cell'\r\n\r\n  editor.deleteFragment = (...args) => {\r\n    if (editor.selection && isInSameTable(editor)) {\r\n      const [content] = Editor.nodes(editor, {\r\n        match: n => n.type === 'paragraph',\r\n      });\r\n\r\n      Transforms.insertNodes(editor, createContent(), { at: content[1] });\r\n      Transforms.removeNodes(editor, { at: Path.next(content[1]) });\r\n\r\n      return;\r\n    }\r\n\r\n    Transforms.removeNodes(editor, {\r\n      match: n => n.type === 'table',\r\n    });\r\n\r\n    deleteFragment(...args);\r\n  };\r\n  editor.deleteBackward = (...args) => {\r\n    const { selection } = editor;\r\n    if (selection && Range.isCollapsed(selection)) {\r\n      const isInTable = Editor.above(editor, {\r\n        match: n => n.type === 'table',\r\n      });\r\n\r\n      if (isInTable) {\r\n        const start = Editor.start(editor, selection);\r\n        const isStart = Editor.isStart(editor, start, selection);\r\n\r\n        const currCell = Editor.above(editor, {\r\n          match: n => n.type === 'table-cell',\r\n        });\r\n\r\n        if (isStart && currCell && !Editor.string(editor, currCell[1])) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    deleteBackward(...args);\r\n  };\r\n\r\n  const preventDeleteCell = (\r\n    operation,\r\n    pointCallback,\r\n    nextPoint\r\n  ) => (unit) => {\r\n    const { selection } = editor;\r\n\r\n    if (Range.isCollapsed(selection)) {\r\n      const [cell] = Editor.nodes(editor, {\r\n        match: matchCells,\r\n      });\r\n      if (cell) {\r\n        // Prevent deletions within a cell\r\n        const [, cellPath] = cell;\r\n        const start = pointCallback(editor, cellPath);\r\n\r\n        if (selection && Point.equals(selection.anchor, start)) {\r\n          return;\r\n        }\r\n      } else {\r\n        // Prevent deleting cell when selection is before or after a table\r\n        const next = nextPoint(editor, selection, { unit });\r\n        const [nextCell] = Editor.nodes(editor, {\r\n          match: matchCells,\r\n          at: next,\r\n        });\r\n        if (nextCell) return;\r\n      }\r\n    }\r\n\r\n    operation(unit);\r\n  };\r\n\r\n\r\n   // prevent deleting cells with deleteBackward\r\n   editor.deleteBackward = preventDeleteCell(\r\n    deleteBackward,\r\n    Editor.start,\r\n    Editor.before\r\n  );\r\n\r\n  // prevent deleting cells with deleteForward\r\n  editor.deleteForward = preventDeleteCell(\r\n    deleteForward,\r\n    Editor.end,\r\n    Editor.after\r\n  );\r\n\r\n  return editor;\r\n};\r\n\r\n\r\nconst withTable = (editor) => {\r\n  const { normalizeNode } = editor;\r\n\r\n  editor.normalizeNode = entry => {\r\n    if (maybePreserveSpace(editor, entry)) return;\r\n\r\n    normalizeNode(entry);\r\n  };\r\n\r\n  return tablePlugin(editor);\r\n};\r\n\r\nexport default withTable;\r\n"],"file":"withTable.js"}